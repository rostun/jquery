My api key: edd641e1-be3f-4ffa-aa56-64945420b0ba

What is an API?
	In layman's terms, an API is an agreement between two people stating: 
		"If you give me this instruction, I will perform this action, or return this information" 
	
	You can consider an API as the alternative "user interface" that software uses to interact with other software.
	We humans are familiar with user interfaces that have fancy layouts with buttons, fonts, colors, graphics, etc; 
	and most of that is unnecessary to a machine.  Machines wouldn't open up a program or website, take a screenshot 
	of that section of the monitor, and then try to parse its meaning visually like a human would.

	Machines just need a shorthand way to do things like checking the current weather or adding an event to your calendar.  
	That's what an API provides.

APIs can be web-based, or specific to a platform.  Google has APIs for search, calendars, translations, etc.  Facebook and Twitter have APIs that allow software to automatically post status updates.  
Apple provides many APIs for building iPhone apps.

Before you can start using the API, you will need:

1. A League of Legends account
2. A Riot Games developer API key
	you can find the API key in your dashboard (https://developer.riotgames.com/)
3. A web server (or web application container) where you can deploy and run code in a language that allows you to make web service requests 
(This is for building a web app, something that will run in any web browser. Native mobile apps are another story.)
4. Some experience writing code in that language.

	You probably already have a LoL account. To get the API key, you log in with your LoL username and password at the Riot Games developer website 
	(https://developer.riotgames.com/) After you agree to the terms of use, you'll see your developer API key. Copy and paste it in a file somewhere. 
	You'll need it to use the API.

	According to the Riot Game's Developer getting started guide, it returns JSON data. In turn what this means is that you can use any programming 
	language that has the ability to manipulate JSON objects. 

	You can think of the API key as a password for you to gain access to the information. There are some requirements for this however; Knowledge of 
	basic web calls is a must, JSON Data for obvious reasons, and the big one is Object Oriented Design.  
	
Ever Riot Games API request requires an API key, so you will need to include your API key using the 
api_key parameter on each request.

Loads missPapaya's basic summoner object in JSON
	https://na.api.pvp.net/api/lol/na/v1.4/summoner/by-name/RiotSchmick?api_key=<key>

	https://na.api.pvp.net/api/lol/na/v1.4/summoner/by-name/missPapaya?api_key=edd641e1-be3f-4ffa-aa56-64945420b0ba
		vs
	https://na.api.pvp.net/api/lol/na/v1.4/summoner/by-name/rosalitamaria?api_key=edd641e1-be3f-4ffa-aa56-64945420b0ba
	
Show how to use API reference page

champion-v1.2
	/api/lol/{region}/v1.2/champion 
		Retrieve all champions. (REST)
	GET /api/lol/{region}/v1.2/champion/{id} 
		Retrieve champion by ID. (REST)

championmastery
	/championmastery/location/{platformId}/player/{playerId}/champion/{championId} 
		Get a champion mastery by player id and champion id. Response code 204 means there were no masteries found for given player id or player id and champion id combination. (RPC)
	/championmastery/location/{platformId}/player/{playerId}/champions 
		Get all champion mastery entries sorted by number of champion points descending (RPC)
	/championmastery/location/{platformId}/player/{playerId}/score 
		Get a player's total champion mastery score, which is sum of individual champion mastery levels (RPC)
	/championmastery/location/{platformId}/player/{playerId}/topchampions 
		Get specified number of top champion mastery entries sorted by number of champion points descending (RPC)

current-game-v1.0
	/observer-mode/rest/consumer/getSpectatorGameInfo/{platformId}/{summonerId} 
		Get current game information for the given summoner ID. (REST)
		
featured-games-v1.0
	/observer-mode/rest/featured 
		Get list of featured games. (REST)

game-v1.3
	/api/lol/{region}/v1.3/game/by-summoner/{summonerId}/recent 
		Get recent games by summoner ID. (REST)

league-v2.5
	/api/lol/{region}/v2.5/league/by-summoner/{summonerIds} 
		Get leagues mapped by summoner ID for a given list of summoner IDs. (REST)
	/api/lol/{region}/v2.5/league/by-summoner/{summonerIds}/entry 
		Get league entries mapped by summoner ID for a given list of summoner IDs. (REST)
	/api/lol/{region}/v2.5/league/by-team/{teamIds} 
		Get leagues mapped by team ID for a given list of team IDs. (REST)
	/api/lol/{region}/v2.5/league/by-team/{teamIds}/entry 
		Get league entries mapped by team ID for a given list of team IDs. (REST)
	/api/lol/{region}/v2.5/league/challenger 
		Get challenger tier leagues. (REST)
	/api/lol/{region}/v2.5/league/master 
		Get master tier leagues. (REST)

lol-static-data-v1.2
	/api/lol/static-data/{region}/v1.2/champion 
		Retrieves champion list. (REST)
	/api/lol/static-data/{region}/v1.2/champion/{id} 
		Retrieves a champion by its id. (REST)
	/api/lol/static-data/{region}/v1.2/item 
		Retrieves item list. (REST)
	/api/lol/static-data/{region}/v1.2/item/{id} 
		Retrieves item by its unique id. (REST)
	/api/lol/static-data/{region}/v1.2/language-strings 
		Retrieve language strings data. (REST)
	/api/lol/static-data/{region}/v1.2/languages 
		Retrieve supported languages data. (REST)
	/api/lol/static-data/{region}/v1.2/map 
		Retrieve map data. (REST)
	/api/lol/static-data/{region}/v1.2/mastery 
		Retrieves mastery list. (REST)
	/api/lol/static-data/{region}/v1.2/mastery/{id} 
		Retrieves mastery item by its unique id. (REST)
	/api/lol/static-data/{region}/v1.2/realm 
		Retrieve realm data. (REST)
	/api/lol/static-data/{region}/v1.2/rune 
		Retrieves rune list. (REST)
	/api/lol/static-data/{region}/v1.2/rune/{id} 
		Retrieves rune by its unique id. (REST)
	/api/lol/static-data/{region}/v1.2/summoner-spell 
		Retrieves summoner spell list. (REST)
	/api/lol/static-data/{region}/v1.2/summoner-spell/{id} 
		Retrieves summoner spell by its unique id. (REST)
	/api/lol/static-data/{region}/v1.2/versions 
		Retrieve version data. (REST)

lol-status-v1.0
	/shards 
		Get shard list. (REST)
	/shards/{region} 
		Get shard status. Returns the data available on the status.leagueoflegends.com website for the given region. (REST)

match-v2.2
	/api/lol/{region}/v2.2/match/{matchId} 
		Retrieve match by match ID. (REST)

matchlist-v2.2
	/api/lol/{region}/v2.2/matchlist/by-summoner/{summonerId} 
		Retrieve match list by summoner ID. (REST)

stats-v1.3
	/api/lol/{region}/v1.3/stats/by-summoner/{summonerId}/ranked 
		Get ranked stats by summoner ID. (REST)
	/api/lol/{region}/v1.3/stats/by-summoner/{summonerId}/summary 
		Get player stats summaries by summoner ID. (REST)

summoner-v1.4
	/api/lol/{region}/v1.4/summoner/by-name/{summonerNames} 
		Get summoner objects mapped by standardized summoner name for a given list of summoner names. (REST)
	/api/lol/{region}/v1.4/summoner/{summonerIds} 
		Get summoner objects mapped by summoner ID for a given list of summoner IDs. (REST)
	/api/lol/{region}/v1.4/summoner/{summonerIds}/masteries 
		Get mastery pages mapped by summoner ID for a given list of summoner IDs (REST)
	/api/lol/{region}/v1.4/summoner/{summonerIds}/name 
		Get summoner names mapped by summoner ID for a given list of summoner IDs. (REST)
	/api/lol/{region}/v1.4/summoner/{summonerIds}/runes 
		Get rune pages mapped by summoner ID for a given list of summoner IDs. (REST)
		
team-v2.4		
	/api/lol/{region}/v2.4/team/by-summoner/{summonerIds} 
		Get teams mapped by summoner ID for a given list of summoner IDs. (REST)
	/api/lol/{region}/v2.4/team/{teamIds} 
		Get teams mapped by team ID for a given list of team IDs. (REST)	
		
Use Node
http://blog.modulus.io/absolute-beginners-guide-to-nodejs
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

